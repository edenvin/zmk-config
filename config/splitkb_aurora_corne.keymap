/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "swedish.h"

#define NAV 1
#define MEDIA 2
#define NUM 3
#define FUN 4
#define SYM 5

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
            };

        combos {
                compatible = "zmk,combos";
                         combo_fun_layer {
                                 timeout-ms = <50>;
                                 key-positions = <37 38>;
                                 bindings = <&mo FUN>;
                         };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
&kp ESC     &kp SQT  &kp COMMA   &kp DOT     &kp P       &kp Y       &kp F   &kp G       &kp C       &kp R       &kp L       &kp BSPC
&lt NAV ESC &hm LGUI A  &hm LALT O  &hm LCTRL E &hm LSHFT U &kp I       &kp D   &hm LSHFT H &hm LCTRL T &hm LALT N  &hm LGUI S  &kp MINUS
&kp LSHIFT  &kp SLASH   &hm RALT Q  &kp J       &kp K       &kp X       &kp B   &kp M       &kp W       &hm RALT V  &kp Z       &kp LSHIFT

                             &kp C_PLAY_PAUSE   &lt NAV SPC   &lt NUM RET   &lt NAV BSPC   &lt SYM SPC  &lt MEDIA TAB
                        >;

                        sensor-bindings = <&inc_dec_kp UP DOWN>;
                };

                nav_layer {
                        bindings = <
&trans  &trans      &trans      &trans      &trans      &trans              &trans          &trans     &trans      &trans       &trans  &trans
&trans  &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &trans              &caps_word      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &trans
&trans  &kp RALT    &trans      &trans      &tog NAV    &trans              &kp INSERT      &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &trans

                                &trans      &trans      &trans              &kp DEL         &kp SPC    &kp TAB
                        >;
                };

                media_layer {
                        bindings = <
&trans      &trans          &trans          &trans          &trans              &trans                  &trans  &trans      &trans      &trans      &trans      &trans
&trans      &kp C_PREV      &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT          &ext_power EP_TOG       &trans  &kp LSHFT   &kp LCTRL   &kp LALT    &kp LGUI    &trans
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3        &out OUT_TOG            &trans  &tog MEDIA  &trans      &kp RALT    &trans      &trans

                                            &kp C_MUTE      &kp C_PLAY_PAUSE    &kp C_STOP              &trans  &trans      &trans
                        >;

                        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
                };

                numbers_layer {
                        bindings = <
&trans  &trans      &trans       &trans     &trans      &trans              &kp EQL          &kp NUM_7         &kp NUM_8         &kp NUM_9         &kp BSLH    &trans
&trans  &kp LGUI    &kp LALT     &kp LCTRL  &kp LSHFT   &trans              &kp ASTRK        &kp NUM_4         &kp NUM_5         &kp NUM_6         &kp SEMI    &trans
&trans  &trans      &kp RALT     &trans     &tog NUM    &trans              &kp MINUS        &kp NUM_1         &kp NUM_2         &kp NUM_3         &kp GRAVE   &trans

                                 &trans     &trans      &trans              &kp PLUS          &kp NUM_0         &kp DOT
                        >;
                };

                functions_layer {
                        bindings = <
&trans  &trans      &trans      &trans      &trans      &trans              &kp PSCRN         &kp F7            &kp F8            &kp F9            &kp F12     &trans
&trans  &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &trans              &kp SLCK          &kp F4            &kp F5            &kp F6            &kp F11     &trans
&trans  &trans      &kp RALT    &trans      &tog FUN    &trans              &kp PAUSE_BREAK   &kp F1            &kp F2            &kp F3            &kp F10     &trans

                                &trans      &trans      &trans              &kp BSPC           &kp SPC           &kp K_APP
                        >;
                };

                symbols_layer {
                        bindings = <
&trans  &kp AMPS    &kp LBKT    &kp RBKT    &kp CRRT    &kp ASTRK           &trans      &trans      &trans      &trans          &trans    &trans
&trans  &kp DLLR    &kp LPAR    &kp RPAR    &kp UNDER   &kp PRCT            &trans      &kp LSHFT   &kp LCTRL   &kp LALT        &kp LGUI  &trans
&trans  &kp EXCL    &kp TILDE   &kp HASH    &kp AT      &kp PIPE            &trans      &tog SYM    &trans      &kp RALT        &trans    &trans

                                &trans      &kp COLON   &kp SEMI            &trans      &trans      &trans

                        >;

                        sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
                };

        };
};
