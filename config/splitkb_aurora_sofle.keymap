/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "eurkey.h"

#define SYM 1
#define NUM 2
#define NAV 3
#define MEDIA 4

&sk {
    release-after-ms = <1000>;
    quick-release;
};

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
};

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 55 56 57 58 59>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 50 51 52 53 54>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE       &kp N1              &kp N2          &kp N3          &kp N4          &kp N5                  &kp N6  &kp N7          &kp N8          &kp N9      &kp N0      &kp EQUAL
&kp TAB         &kp SINGLE_QUOTE    &kp COMMA       &kp DOT         &kp P           &kp Y                   &kp F   &kp G           &kp C           &kp R       &kp L       &kp SLASH
&lt NAV ESC     &hml LGUI A         &hml LALT O     &hml LCTRL E    &hml LSHIFT U   &kp I                   &kp D   &hmr RSHIFT H   &hmr RCTRL T    &hmr RALT N &hmr RGUI S &kp MINUS
&kp LSHIFT      &kp SEMICOLON       &kp Q           &kp J           &kp K           &kp X   &kp A   &kp A   &kp B   &kp M           &kp W           &kp V       &kp Z       &kp RSHIFT

                              &kp LCTRL &kp LALT &kp LGUI &mo SYM &lt NUM RET       &kp BSPC &kp SPACE &lt NAV LEFT &kp DOWN &kp RIGHT
            >;
        };

        symbols_layer {
            bindings = <
&trans      &trans          &trans          &trans      &trans      &trans                      &trans      &trans      &trans          &trans      &trans      &trans
&trans      &kp PERCENT     &kp AT          &kp LBRC    &kp RBRC    &kp AMPS                    &kp ASTRK   &kp PIPE    &kp BACKSLASH   &trans      &trans      &trans
&trans      &kp EU_ADIA     &kp EU_ODIA     &kp LBKT    &kp RBKT    &kp QMARK                   &kp PLUS    &kp RSHIFT  &kp RCTRL       &kp RALT    &kp RGUI    &trans
&trans      &kp EU_ARNG     &kp HASH        &kp LPAR    &kp RPAR    &kp EXCL    &trans  &trans  &kp EQUAL   &trans      &trans          &trans      &trans      &trans

                                        &trans &trans &trans &trans &trans       &trans &trans &to 0 &trans  &trans
            >;
        };

        numbers_layer {
            bindings = <
&trans      &kp F1          &kp F2          &kp F3      &kp F4          &kp F5                      &kp F6      &kp F7  &kp F8  &kp F9  &kp F10     &kp PLUS
&trans      &kp F11         &kp F12         &trans      &trans          &trans                      &kp ASTRK   &kp N7  &kp N8  &kp N9  &trans      &kp SLASH
&to NAV     &kp LGUI        &kp LALT        &kp LCTRL   &kp LSHIFT      &trans                      &kp PLUS    &kp N4  &kp N5  &kp N6  &trans      &kp MINUS
&trans      &trans          &trans          &kp LPAR    &kp RPAR        &trans      &trans  &trans  &kp EQUAL   &kp N1  &kp N2  &kp N3  &trans      &trans

                                        &trans &trans &trans &to 0 &trans       &trans &kp N0 &kp COMMA &kp DOT  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans      &trans          &trans          &trans      &trans                      &trans  &trans      &trans      &trans      &trans      &trans
&trans  &trans      &kp LG(C)       &kp LG(V)       &kp DEL     &trans                      &trans  &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &trans
&to 0   &kp LGUI    &kp LALT        &kp LCTRL       &kp LSHIFT  &mo MEDIA                   &trans  &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &trans
&trans  &trans      &trans          &to NUM         &to SYM     &to MEDIA  &trans   &trans  &kp TAB &kp HOME    &kp UP      &trans      &trans      &trans

                                       &trans &trans &trans &trans &trans       &kp DEL &trans &kp LEFT &kp DOWN &kp RIGHT
            >;
        };

        media_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &trans                          &trans  &trans      &trans          &trans          &trans      &trans
&trans      &trans          &trans          &trans          &trans          &out OUT_TOG                    &trans  &trans      &kp C_MUTE      &trans          &trans      &trans
&trans      &kp LGUI        &kp LALT        &kp LCTRL       &kp LSHIFT      &ext_power EP_TOG               &trans  &kp C_PREV  &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT  &trans
&trans      &trans          &trans          &trans          &trans          &trans          &trans  &trans  &trans  &trans      &trans          &trans          &trans      &trans

                                                              &trans &trans &trans &trans &trans    &kp C_STOP &kp C_PLAY_PAUSE &to 0 &trans &trans
            >;
        };
    };
};
