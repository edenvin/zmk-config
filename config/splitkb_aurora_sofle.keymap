/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "swe.h"

#define NAV 1
#define MEDIA 2
#define NUM 3
#define FUN 4
#define SYM 5
#define LAYERHOP 6

&sk {
        release-after-ms = <2000>;
        quick-release;
};

/ {
        behaviors {
                commalt: comma_lt {
                        compatible = "zmk,behavior-mod-morph";
                        label = "COMMA_LT";
                        #binding-cells = <0>;
                        bindings = <&kp COMMA>, <&kp S_LT>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                dotgt: dot_gt {
                        compatible = "zmk,behavior-mod-morph";
                        label = "DOT_GT";
                        #binding-cells = <0>;
                        bindings = <&kp DOT>, <&kp S_GT>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                eqplus: equal_plus {
                        compatible = "zmk,behavior-mod-morph";
                        label = "EQUAL_PLUS";
                        #binding-cells = <0>;
                        bindings = <&kp S_EQUAL>, <&kp S_PLUS>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                slashqmark: slash_qmark {
                        compatible = "zmk,behavior-mod-morph";
                        label = "SLASH_QUESTIONMARK";
                        #binding-cells = <0>;
                        bindings = <&kp S_SLASH>, <&kp S_QMARK>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                gravetilde: grave_tilde {
                        compatible = "zmk,behavior-mod-morph";
                        label = "GRAVE_TILDE";
                        #binding-cells = <0>;
                        bindings = <&kp S_GRAVE>, <&kp S_TILDE>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                semicolon: semi_colon {
                        compatible = "zmk,behavior-mod-morph";
                        label = "SEMI_COLON";
                        #binding-cells = <0>;
                        bindings = <&kp S_SEMI>, <&kp S_COLON>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                quotes: sqt_dqt {
                        compatible = "zmk,behavior-mod-morph";
                        label = "SINGLEQUOTE_DOUBLEQUOTE";
                        #binding-cells = <0>;
                        bindings = <&kp S_QUOT>, <&kp S_DQT>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                n2: n2 {
                        compatible = "zmk,behavior-mod-morph";
                        label = "N2";
                        #binding-cells = <0>;
                        bindings = <&kp N2>, <&kp S_AT>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };
                
                n4: n4 {
                        compatible = "zmk,behavior-mod-morph";
                        label = "N4";
                        #binding-cells = <0>;
                        bindings = <&kp N4>, <&kp S_DLLR>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                n6: n6 {
                        compatible = "zmk,behavior-mod-morph";
                        label = "N6";
                        #binding-cells = <0>;
                        bindings = <&kp N6>, <&kp S_CARET>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                n7: n7 {
                        compatible = "zmk,behavior-mod-morph";
                        label = "N7";
                        #binding-cells = <0>;
                        bindings = <&kp N7>, <&kp S_AMPS>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                n8: n8 {
                        compatible = "zmk,behavior-mod-morph";
                        label = "N8";
                        #binding-cells = <0>;
                        bindings = <&kp N8>, <&kp S_ASTRK>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                n9: n9 {
                        compatible = "zmk,behavior-mod-morph";
                        label = "N9";
                        #binding-cells = <0>;
                        bindings = <&kp N9>, <&kp S_LPAR>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

                n0: n0 {
                        compatible = "zmk,behavior-mod-morph";
                        label = "N0";
                        #binding-cells = <0>;
                        bindings = <&kp N0>, <&kp S_RPAR>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "_";
                        bindings = <
&gravetilde     &kp N1      &n2         &kp N3      &n4     &kp N5                      &n6     &n7     &n8     &n9     &n0     &eqplus
&kp TAB         &quotes     &commalt    &dotgt      &kp P   &kp Y                       &kp F   &kp G   &kp C   &kp R   &kp L   &slashqmark
&mo NAV         &kp A       &kp O       &kp E       &kp U   &kp I                       &kp D   &kp H   &kp T   &kp N   &kp S   &kp S_MINUS
&kp LSHIFT      &semicolon  &kp Q       &kp J       &kp K   &kp X   &kp A       &kp A   &kp B   &kp M   &kp W   &kp V   &kp Z   &kp RSHIFT

                              &kp LCTRL &kp LALT &kp LGUI &mo SYM &kp RET       &kp ESC &kp SPACE &kp BSPC &kp TAB &kp RGUI
                        >;
                };

                nav_layer {
                        label = "NAV";
                        bindings = <
&trans      &trans          &trans  &trans          &trans  &trans                      &trans      &trans      &trans      &trans      &trans    &trans
&to 0       &mo LAYERHOP    &trans  &kp S_CARET     &kp DEL &trans                      &trans      &kp HOME    &kp PG_DN   &kp PG_UP   &kp END   &trans
&trans      &trans          &trans  &kp S_GRAVE     &kp DEL &trans                      &caps_word  &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT &trans
&trans      &trans          &trans  &trans          &trans  &trans  &trans      &trans  &kp INSERT  &kp HOME    &kp PG_DN   &kp PG_UP   &kp END   &trans

                                       &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans
                        >;
                };

                media_layer {
                        label = "MEDIA";
                        bindings = <
&trans      &trans          &trans          &trans          &trans          &trans                          &trans  &trans              &trans          &trans          &trans      &trans
&to 0       &trans          &trans          &trans          &trans          &trans                          &trans  &kp C_MUTE          &trans          &trans          &trans      &trans
&trans      &trans          &trans          &trans          &trans          &ext_power EP_TOG               &trans  &kp C_PREV          &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT  &trans
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &out OUT_TOG  &trans    &trans  &trans  &kp C_PLAY_PAUSE    &kp C_STOP      &trans          &trans      &trans

                                                              &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans
                        >;
                };

                numbers_layer {
                        label = "123";
                        bindings = <
&trans  &trans  &trans      &trans  &trans      &trans                      &trans     &trans   &trans   &trans   &trans       &trans
&to 0   &kp N1  &kp N2      &kp N3  &kp N4      &kp N5                      &kp N6     &kp N7   &kp N8   &kp N9   &kp N0       &trans
&trans  &trans  &trans      &trans  &trans      &trans                      &trans     &kp N4   &kp N5   &kp N6   &kp S_ASTRK  &trans
&trans  &trans  &trans      &trans  &trans      &trans  &trans    &trans    &trans     &kp N1   &kp N2   &kp N3   &kp S_EQUAL  &trans

                           &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans
                        >;
                };

                functions_layer {
                        label = "Fn";
                        bindings = <
&trans  &trans  &trans      &trans  &trans      &trans                      &trans              &trans  &trans      &trans      &trans      &trans
&to 0   &trans  &trans      &trans  &trans      &trans                      &kp PSCRN           &kp F7  &kp F8      &kp F9      &kp F12     &trans
&trans  &trans  &trans      &trans  &trans      &trans                      &kp SLCK            &kp F4  &kp F5      &kp F6      &kp F11     &trans
&trans  &trans  &trans      &trans  &trans      &trans   &trans    &trans   &kp PAUSE_BREAK     &kp F1  &kp F2      &kp F3      &kp F10     &trans

                           &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans
                        >;
                };

                symbols_layer {
                        label = "%^&@-'/[]";
                        bindings = <
&trans      &trans      &trans      &trans      &trans      &trans                          &trans            &trans   &trans   &trans  &trans       &trans
&to 0       &kp S_HASH  &kp S_AT    &kp S_LBRC  &kp S_RBRC  &kp S_PERCENT                   &kp S_DLLR        &kp N7   &kp N8   &kp N9  &kp S_ASTRK  &trans
&kp S_EQUAL &kp S_ADIA  &kp S_ODIA  &kp S_LPAR  &kp S_RPAR  &kp S_LT                        &kp S_GT          &kp N4   &kp N5   &kp N6  &kp S_SLASH  &trans
&trans      &kp S_ARNG  &kp S_PIPE  &kp S_LBKT  &kp S_RBKT  &kp S_EXCL      &trans  &trans  &kp S_AMPS        &kp N1   &kp N2   &kp N3  &kp S_DQT    &trans

                                              &trans &trans &trans &trans &trans       &trans &trans &kp N0 &kp COMMA  &trans
                        >;
                };

                layer_hop_layer {
                        label = "LAYHOP";
                        bindings = <
&trans      &trans      &trans      &trans  &trans      &trans                  &trans          &trans      &trans      &trans      &trans      &trans
&to MEDIA   &trans      &to FUN     &trans  &trans      &trans                  &trans          &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &trans
&to NAV     &trans      &trans      &trans  &trans      &trans                  &caps_word      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &trans
&trans      &trans      &trans      &trans  &trans      &trans  &trans  &trans  &kp INSERT      &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &trans

                                 &trans &trans &trans &to SYM &trans       &trans &trans &trans &trans &trans
                        >;
                };
        };
};
