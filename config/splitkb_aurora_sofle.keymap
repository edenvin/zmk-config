/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "swe.h"

#define NAV 1
#define SYM 2

/ {
    behaviors {
        commalt: comma_lt {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_LT";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp S_LT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dotgt: dot_gt {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_GT";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp S_GT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        eqplus: equal_plus {
            compatible = "zmk,behavior-mod-morph";
            label = "EQUAL_PLUS";
            #binding-cells = <0>;
            bindings = <&kp S_EQUAL>, <&kp S_PLUS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        slashqmark: slash_qmark {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_QUESTIONMARK";
            #binding-cells = <0>;
            bindings = <&kp S_SLASH>, <&kp S_QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        gravetilde: grave_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_TILDE";
            #binding-cells = <0>;
            bindings = <&kp S_GRAVE>, <&kp S_TILDE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        semicolon: semi_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMI_COLON";
            #binding-cells = <0>;
            bindings = <&kp S_SEMI>, <&kp S_COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        quotes: sqt_dqt {
            compatible = "zmk,behavior-mod-morph";
            label = "SINGLEQUOTE_DOUBLEQUOTE";
            #binding-cells = <0>;
            bindings = <&kp S_QUOT>, <&kp S_DQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&gravetilde      &kp N1      &kp N2      &kp N3      &kp N4  &kp N5             &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &eqplus
&kp TAB          &quotes     &commalt    &dotgt      &kp P   &kp Y              &kp F   &kp G   &kp C   &kp R   &kp L   &slashqmark
&kp ESC          &kp A       &kp O       &kp E       &kp U   &kp I              &kp D   &kp H   &kp T   &kp N   &kp S   &kp S_MINUS
&kp LSHIFT       &semicolon  &kp Q       &kp J       &kp K   &kp X &kp A  &kp A &kp B   &kp M   &kp W   &kp V   &kp Z   &kp RSHIFT

                 &kp LCTRL &kp LALT &kp LGUI &mo SYM &kp RET    &kp BSPC &kp SPACE &mo NAV &kp TAB &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };


                nav_layer {
                        label = "NAV";
                        bindings = <
&trans    &trans          &trans      &trans      &trans  &trans           &trans   &trans    &trans          &trans      &trans      &trans
&to 0     &trans    &trans      &kp S_CARET &kp DEL     &trans              &trans          &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &trans
&trans    &trans          &trans      &kp S_GRAVE &kp DEL     &trans              &caps_word      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &trans
&trans    &trans          &trans      &trans      &trans      &trans &kp A  &kp A &kp INSERT      &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &trans

                        &trans      &trans &trans      &trans      &trans        &trans    &trans      &trans &trans      &trans
                        >;
                };

                symbols_layer {
                        label = "%^&@-'/[]";
                        bindings = <
&trans    &trans          &trans      &trans      &trans  &trans                                    &trans  &trans    &trans          &trans      &trans      &trans
&to 0               &kp S_HASH   &kp S_AT      &kp S_LBRC    &kp S_RBRC   &kp S_PERCENT        &kp S_DLLR    &kp N7   &kp N8   &kp N9  &kp S_ASTRK  &trans
&kp S_EQUAL  &kp S_ADIA   &kp S_ODIA    &kp S_LPAR    &kp S_RPAR   &kp S_LT             &kp S_GT      &kp N4   &kp N5   &kp N6  &kp S_SLASH  &trans
&trans              &kp S_ARNG   &kp S_PIPE    &kp S_LBKT    &kp S_RBKT   &kp S_EXCL  &kp A  &kp A &kp S_AMPS    &kp N1   &kp N2   &kp N3  &kp S_DQT    &trans

                          &trans        &trans    &trans        &trans       &trans           &trans    &trans   &kp N0 &kp COMMA   &trans

                        >;
                };

    };
};
