/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "eurkey.h"

#define SYM 1
#define NAV 2
#define MEDIA 3
#define LAYERHOP 4

&sk {
    release-after-ms = <1000>;
    quick-release;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE       &kp N1              &kp N2      &kp N3          &kp N4          &kp N5                  &kp N6  &kp N7          &kp N8          &kp N9      &kp N0      &kp EQUAL
&kp TAB         &kp SINGLE_QUOTE    &kp COMMA   &kp DOT         &kp P           &kp Y                   &kp F   &kp G           &kp C           &kp R       &kp L       &kp SLASH
&lt NAV ESC     &hm LGUI A          &hm LALT O  &hm LCTRL E     &hm LSHIFT U    &kp I                   &kp D   &hm RSHIFT H    &hm RCTRL T     &hm RALT N  &hm RGUI S  &kp MINUS
&kp LSHIFT      &kp SEMICOLON       &kp Q       &kp J           &kp K           &kp X   &kp A   &kp A   &kp B   &kp M           &kp W           &kp V       &kp Z       &kp RSHIFT

                              &kp LCTRL &kp LALT &kp LGUI &mo NAV &lt SYM RET       &kp BSPC &kp SPACE &lt SYM BSPC &kp LG(LA(LS(LCTRL))) &kp RGUI
            >;
        };

        symbols_layer {
            bindings = <
&trans      &trans          &trans          &trans      &trans          &trans                      &trans      &trans  &trans  &trans  &trans      &kp PLUS
&trans      &kp EU_ADIA     &kp EU_ODIA     &kp LPAR    &kp RPAR        &kp PERCENT                 &kp LBRC    &kp N7  &kp N8  &kp N9  &kp RBRC    &kp SLASH
&kp EQUAL   &sk LGUI        &sk LALT        &sk LCTRL   &sk LSHIFT      &kp QMARK                   &kp LBKT    &kp N4  &kp N5  &kp N6  &kp RBKT    &kp MINUS
&trans      &kp EU_ARNG     &kp HASH        &kp AT      &kp BACKSLASH   &kp EXCL    &trans  &trans  &kp AMPS    &kp N1  &kp N2  &kp N3  &kp ASTRK   &trans

                                        &trans &trans &trans &to 0 &trans       &trans &kp N0 &kp COMMA &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                      &kp F6      &kp F7      &kp F8          &kp F9          &kp F10     &trans
&trans  &kp F11     &kp F12     &trans      &kp DEL     &to LAYERHOP                &trans      &trans      &kp C_AC_COPY   &kp C_AC_PASTE  &trans      &trans
&to 0   &sk LGUI    &sk LALT    &sk LCTRL   &sk LSHIFT  &trans                      &trans      &kp LEFT    &kp DOWN        &kp UP          &kp RIGHT   &trans
&trans  &trans      &trans      &trans      &tog NAV     &mo MEDIA  &trans   &trans  &kp INSERT  &kp HOME    &kp PG_DN       &kp PG_UP       &kp END     &trans

                                       &trans &trans &trans &to 0 &trans       &kp DEL &trans &trans &trans &trans
            >;
        };

        media_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &trans                          &trans  &trans              &trans          &trans          &trans      &trans
&trans      &trans          &trans          &trans          &trans          &out OUT_TOG                    &trans  &trans              &kp C_MUTE      &trans          &trans      &trans
&trans      &sk LGUI        &sk LALT        &sk LCTRL       &sk LSHIFT      &ext_power EP_TOG               &trans  &kp C_PREV          &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT  &trans
&trans      &trans          &trans          &trans          &trans          &trans          &trans  &trans  &trans  &kp C_PLAY_PAUSE    &kp C_STOP      &trans          &trans      &trans

                                                              &trans &trans &trans &to 0 &trans    &trans &trans &trans &trans &trans
            >;
        };

        layerhop_layer {
            bindings = <
&trans      &trans  &trans      &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans      &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans  &trans
&to NAV     &trans  &trans      &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans      &trans  &trans  &to MEDIA  &trans  &trans   &trans  &trans  &trans  &trans  &trans  &trans

                        &trans &trans &trans &to SYM &trans       &trans &trans &trans &trans &trans
            >;
        };
    };
};
